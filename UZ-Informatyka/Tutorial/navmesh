1. Use _Marching Squares_ algorithm to convert obstacle tiles into outlines. 
Note that map edges is an outline too and need to be included as well.

2. Reduce number of points in outlines using _Douglas-Peucker algorithm_ (purple lines on the bottom picture)

3. Feed all points into _Delaunay triangulation_ (to get most uniform triangles)

Add additional points in empty areas and along the map edges (to get more even navmesh)

Check along obstacle outlines and flip polygons produced by Delaunay to match outlines. 
- Often Delaunay could place triangles (grey) mismatching your outlines (red), 
then you need to detect and flip them. 
Adjoining them back into a polygon, split it along outline(s) and triangulate it manually